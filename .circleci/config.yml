version: 2.1
orbs:
  aws-s3: circleci/aws-s3@2.0.0
parameters:
  cross-container-tag:
    # when updating the go version, should also update the go version in go.mod
    description: docker tag for cross build container from quay.io . Created by https://github.com/influxdata/edge/tree/master/dockerfiles/cross-builder .
    type: string
    default: go1.15.10-5b6019c0e4f330f1db40e48357fe6beb4a06025a

commands:
  install_rust:
    steps:
      - run:
          name: Install Rust toolchain
          command: |
            ./scripts/ci/install-rust.sh
            echo 'export PATH=${HOME}/.cargo/bin:${PATH}' >> $BASH_ENV

jobs:
  build_binaries:
    docker:
      - image: quay.io/influxdb/cross-builder:<< pipeline.parameters.cross-container-tag >>
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - restore_cache:
          keys:
            - influxdb-cache-v1-{{ checksum "go.mod" }}
            - influxdb-cache-v1
      - run:
          name: Build source tarball
          command: |
            set -x
            mkdir -p ./tarball
            TARBALL_NAME="./tarball/influxdb-src-${CIRCLE_SHA1}.tar.gz"
            tar --exclude-vcs --exclude './tarball' -vczf "${TARBALL_NAME}" .
      - store_artifacts:
          path: tarball/
      - run:
          name: Build binaries
          command: |
            set -x

            tarsum()
            {
              FROM_DIR=$1
              TARBALL_PATH=$2
              tar -C $FROM_DIR -cvzf ${TARBALL_PATH} .
              md5sum ${TARBALL_PATH} > ${TARBALL_PATH}.md5
              sha256sum ${TARBALL_PATH} > ${TARBALL_PATH}.sha256
            }

            export CC=/usr/local/bin/xcc.sh
            export CGO_ENABLED=1

            # linux amd64 (static build)
            TMPOUTDIR=$(mktemp -d)
            export GOOS=linux
            export GOARCH=amd64
            for cmd in github.com/influxdata/influxdb/cmd/{influxd,influx,influx_inspect} ; do
              go build -i -o "$TMPOUTDIR/$(basename $cmd)" -tags "netgo osusergo static_build" $cmd
            done
            mkdir -p ./bins
            tarsum $TMPOUTDIR ./bins/influxdb_bin_${GOOS}_${GOARCH}-${CIRCLE_SHA1}.tar.gz
      - store_artifacts:
          path: bins/
      - save_cache:
          key: influxdb-cache-v1-{{ checksum "go.mod" }}
          paths:
            - /go/pkg/mod
            - /root/.cargo
            - /root/.cache/go-build
  static_code_checks:
    docker:
      - image: quay.io/influxdb/cross-builder:<< pipeline.parameters.cross-container-tag >>
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: checkfmt
          command: ./checkfmt.sh
      - run:
          name: codegen
          command: ./generate.sh
      - run:
          name: go vet
          command: go vet ./...
  unit_test:
    docker:
      - image: quay.io/influxdb/cross-builder:<< pipeline.parameters.cross-container-tag >>
    steps:
      - checkout
      - restore_cache:
          keys:
            - influxdb-cache-v1-{{ checksum "go.mod" }}
            - influxdb-cache-v1
      - run:
          name: Execute tests
          command: |
            set -x
            mkdir -p junit
            go test -v ./... 2>&1 | tee tests.log
          no_output_timeout: 1500s
      - run:
          name: Convert test output to junit
          command: go-junit-report < tests.log > junit/influxdb.junit.xml
          when: always
      - store_test_results:
          path: junit/
  unit_test_tsi:
    docker:
      - image: quay.io/influxdb/cross-builder:<< pipeline.parameters.cross-container-tag >>
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          keys:
            - influxdb-cache-v1-{{ checksum "go.mod" }}
            - influxdb-cache-v1
      - run:
          name: Execute tests
          command: |
            set -x
            mkdir -p junit-tsi
            export INFLUXDB_DATA_INDEX_VERSION="tsi1"
            go test -v ./... 2>&1 | tee tests.log
          no_output_timeout: 1500s
      - run:
          name: Convert test output to junit
          command: go-junit-report < tests.log > junit-tsi/influxdb.junit.xml
          when: always
      - store_test_results:
          path: junit-tsi/
  unit_test_race:
    docker:
      - image: quay.io/influxdb/cross-builder:<< pipeline.parameters.cross-container-tag >>
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          keys:
            - influxdb-cache-v1-{{ checksum "go.mod" }}
            - influxdb-cache-v1
      - run:
          name: Execute tests
          command: |
            set -x
            mkdir -p junit-race/
            export GORACE="halt_on_error=1"
            go test -race -v ./... 2>&1 | tee tests.log
          no_output_timeout: 1500s
      - run:
          name: Convert test output to junit
          command: go-junit-report < tests.log > junit-race/influxdb.junit.xml
          when: always
      - store_test_results:
          path: junit-race/
  fluxtest:
    docker:
      - image: quay.io/influxdb/cross-builder:<< pipeline.parameters.cross-container-tag >>
    steps:
      - checkout
      - run:
          name: Execute test
          command: ./test-flux.sh || exit 1
          no_output_timeout: 1500s
  changelog:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - install_rust
      - run:
          name: Run script
          command: |
            set -x
            git clone --depth=1 --branch v0.2.5 https://github.com/orhun/git-cliff
            cd git-cliff
            cargo install git-cliff
            cd ..

            S3_PATH="https://s3.amazonaws.com/dl.influxdata.com/platform/nightlies/master-1.x"
            curl -o CHANGELOG.md ${S3_PATH}/CHANGELOG.md
            curl -o scripts/ci/changelog-commit.txt ${S3_PATH}/changelog-commit.txt

            TIMESTAMP="$(date -u '+%Y%m%d')"
            COMMIT_FILE_PATH="scripts/ci/changelog-commit.txt"
            LAST_COMMIT=$(cat $COMMIT_FILE_PATH)
            NEWEST_COMMIT=${CIRCLE_SHA1}
            ./scripts/ci/update-changelog.sh \
              --commit-range "$LAST_COMMIT..$NEWEST_COMMIT" \
              --prepend CHANGELOG.md \
              -- \
              --tag $TIMESTAMP
            echo ${CIRCLE_SHA1} > $COMMIT_FILE_PATH

            mkdir changelog_artifacts
            cp CHANGELOG.md changelog_artifacts
            cp $COMMIT_FILE_PATH changelog_artifacts
      - store_artifacts:
          path: changelog_artifacts/
      - aws-s3/copy:
          arguments: |
            --acl public-read
          aws-region: AWS_S3_REGION
          from: changelog_artifacts/changelog-commit.txt
          to: s3://dl.influxdata.com/platform/nightlies/master-1.x/changelog-commit.txt
      - aws-s3/copy:
          arguments: |
            --acl public-read
          aws-region: AWS_S3_REGION
          from: changelog_artifacts/CHANGELOG.md
          to: s3://dl.influxdata.com/platform/nightlies/master-1.x/CHANGELOG.md

workflows:
  version: 2.1
  on_push:
    jobs:
      - build_binaries
      - static_code_checks
      - fluxtest
      - unit_test
      - unit_test_tsi
      - unit_test_race
  daily:
    triggers:
      - schedule:
          # run weekdays at 4am -- note: use spaces, not tabs
          cron: "0 4 * * 1-5"
          filters:
            branches:
              only:
                - "master-1.x"
                - "1.9"
    jobs:
      - changelog
      - static_code_checks
      - fluxtest
      - unit_test
      - unit_test_tsi
      - unit_test_race
      - build_binaries:
          requires:
            - changelog
            - static_code_checks
            - fluxtest
            - unit_test
            - unit_test_tsi
            - unit_test_race
